[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "audio-text"
version = "0.1.0"
description = "Get text from audio"
authors = [{ name = "Daniel Ducuara", email = "daniel14015@gmail.com" }]
readme = "README.md"
requires-python = ">=3.12.0"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
]

dependencies = [
  "fastapi==0.116.2",
  "uvicorn[standard]==0.35.0",
  "apischema==0.19.0",
  "openai-whisper==20231117",
  "setuptools-rust==1.9.0",
  "python-magic==0.4.27",
  # Storage and async processing
  "boto3==1.34.0",
  "celery[redis]==5.3.0",
  # Database
  "sqlalchemy==2.0.0",
  "alembic==1.13.0",
  "psycopg2-binary==2.9.9",
  # Additional utilities
  "python-multipart==0.0.20",
  # "pydantic-settings==2.1.0",
]

[project.optional-dependencies]
dev = ["ruff>=0.12.10", "pre-commit>=4.3.0", "setuptools==80.9.0"]
test = [
  "pytest==6.2.4",
  "pytest-mock==3.6.1",
  "pytest-cov==2.12.1",
  "pytest-asyncio==0.15.1",
]

[tool.setuptools.packages.find]
exclude = ["tests*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=app --cov-report=term-missing"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
preview = true

[tool.ruff.lint]
extend-select = ["I", "D"]
fixable = ["I", "D", "F401"]
ignore = ["D1"]

[tool.ruff]
line-length = 100
# Exclude a variety of commonly ignored directories.
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
]
